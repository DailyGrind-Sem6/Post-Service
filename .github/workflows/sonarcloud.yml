name: SonarCloud
on:
  pull_request:
    branches: [ "main" ]

env:
    ACR_RESOURCE_GROUP: Sem-6
    AZURE_CONTAINER_REGISTRY: acrworkflow1714126575894
    CLUSTER_NAME: DailyGrind
    CLUSTER_RESOURCE_GROUP: Sem-6
    CONTAINER_NAME: image-workflow-1714126575894
    DEPLOYMENT_MANIFEST_PATH: |
        ./Manifest/post-service-deployment.yaml
        ./Manifest/post-service-service.yaml

        
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Gokay-Atalay-Sem6_Post-Service" /o:"software-advanced-sem6" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          
  deploy_to_Azure:
    name: Deploy app to Azure
    permissions:
        actions: read
        contents: read
        id-token: write
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
          name: Azure login
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        - uses: azure/use-kubelogin@v1
          name: Set up kubelogin for non-interactive login
          with:
            kubelogin-version: v0.0.25
        - uses: azure/aks-set-context@v3
          name: Get K8s context
          with:
            admin: "false"
            cluster-name: ${{ env.CLUSTER_NAME }}
            resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
            use-kubelogin: "true"
        - uses: Azure/k8s-deploy@v4
          name: Deploys application
          with:
            action: deploy
            images: tendeza/sem6-post-service
            manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
